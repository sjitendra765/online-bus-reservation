'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

exports.default = function (req, res) {
  var contentString = res.content.toString();
  var content = void 0;
  try {
    content = JSON.parse(contentString);
  } catch (e) {
    req.logger.warn('Unable to parse xlsx template JSON string (maybe you are missing {{{xlsxPrint}}} at the end?): \n' + contentString.substring(0, 100) + '... \n' + e.stack);
    return (0, _fallback2.default)(e, req, res);
  }

  var files = [];
  Object.keys(content).forEach(function (k) {
    var buf = null;
    if (k.includes('.xml')) {
      var builder = new _xml2js2.default.Builder();
      buf = new Buffer(builder.buildObject(content[k]), 'utf8');
    }

    if (k.includes('xl/media/') || k.includes('.bin')) {
      buf = new Buffer(content[k], 'base64');
    }

    if (!buf) {
      buf = new Buffer(content[k], 'utf8');
    }

    files.push({
      path: k,
      data: buf
    });
  });

  return new _bluebird2.default(function (resolve, reject) {
    var id = _uuid2.default.v1();
    var xlsxFileName = _path2.default.join(req.reporter.options.tempDirectory, id + '.xlsx');
    var archive = (0, _archiver2.default)('zip');
    var output = _fs2.default.createWriteStream(xlsxFileName);

    output.on('close', function () {
      req.logger.debug('Successfully zipped now.');
      res.stream = _fs2.default.createReadStream(xlsxFileName);
      (0, _responseXlsx2.default)(req, res).then(function () {
        return resolve();
      }).catch(function (e) {
        return reject(e);
      });
    });

    archive.on('error', function (err) {
      return reject(err);
    });

    archive.pipe(output);
    files.forEach(function (f) {
      return archive.append(f.data, { name: f.path });
    });
    archive.finalize();
  });
};

var _fs = require('fs');

var _fs2 = _interopRequireDefault(_fs);

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

var _bluebird = require('bluebird');

var _bluebird2 = _interopRequireDefault(_bluebird);

var _archiver = require('archiver');

var _archiver2 = _interopRequireDefault(_archiver);

var _uuid = require('uuid');

var _uuid2 = _interopRequireDefault(_uuid);

var _xml2js = require('xml2js');

var _xml2js2 = _interopRequireDefault(_xml2js);

var _fallback = require('./fallback.js');

var _fallback2 = _interopRequireDefault(_fallback);

var _responseXlsx = require('./responseXlsx.js');

var _responseXlsx2 = _interopRequireDefault(_responseXlsx);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }