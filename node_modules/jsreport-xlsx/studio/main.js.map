{"version":3,"sources":["webpack:///webpack/bootstrap 07b5c219a9a1e3ec3580","webpack:///./studio/main_dev.js","webpack:///./studio/XlsxEditor.js","webpack:///external \"Studio.libraries['react']\"","webpack:///./studio/XlsxUploadButton.js","webpack:///external \"Studio\"","webpack:///external \"Studio.libraries['filesaver.js-npm']\"","webpack:///./studio/XlsxTemplateProperties.js"],"names":[],"mappings":"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","file":"./studio/main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 07b5c219a9a1e3ec3580\n **/","import XlsxEditor from './XlsxEditor.js'\nimport XlsxUploadButton from './XlsxUploadButton.js'\nimport Properties from './XlsxTemplateProperties.js'\nimport Studio from 'jsreport-studio'\n\nStudio.addEntitySet({\n  name: 'xlsxTemplates',\n  faIcon: 'fa-file-excel-o',\n  visibleName: 'xlsx template',\n  onNew: XlsxUploadButton.OpenUpload\n})\nStudio.addEditorComponent('xlsxTemplates', XlsxEditor)\nStudio.addToolbarComponent(XlsxUploadButton)\nStudio.addPropertiesComponent(Properties.title, Properties, (entity) => entity.__entitySet === 'templates' && entity.recipe === 'xlsx')\n\nStudio.previewListeners.push((request, entities) => {\n  if (request.template.recipe !== 'xlsx') {\n    return\n  }\n\n  if (Studio.getSettingValueByKey('xlsx-preview-informed', false) === true) {\n    return\n  }\n\n  Studio.setSetting('xlsx-preview-informed', true)\n\n  Studio.openModal(() => <div>We need to upload your excel report to our publicly hosted server to be able to use\n    Excel Online Service for previewing here in the studio. You can disable it in the configuration, see <a\n      href='https://github.com/jsreport/jsreport-xlsx' target='_blank'>https://github.com/jsreport/jsreport-xlsx</a> for details.\n  </div>)\n})\n\n\n\n/** WEBPACK FOOTER **\n ** ./studio/main_dev.js\n **/","import React, { Component } from 'react'\r\nimport XlsxUploadButton from './XlsxUploadButton.js'\r\nimport fileSaver from 'filesaver.js-npm'\r\n\r\nconst b64toBlob = (b64Data, contentType = '', sliceSize = 512) => {\r\n  const byteCharacters = atob(b64Data)\r\n  const byteArrays = []\r\n\r\n  for (let offset = 0; offset < byteCharacters.length; offset += sliceSize) {\r\n    const slice = byteCharacters.slice(offset, offset + sliceSize)\r\n\r\n    const byteNumbers = new Array(slice.length)\r\n    for (let i = 0; i < slice.length; i++) {\r\n      byteNumbers[i] = slice.charCodeAt(i)\r\n    }\r\n\r\n    const byteArray = new Uint8Array(byteNumbers)\r\n\r\n    byteArrays.push(byteArray)\r\n  }\r\n\r\n  const blob = new Blob(byteArrays, { type: contentType })\r\n  return blob\r\n}\r\n\r\nexport default class ImageEditor extends Component {\r\n  static propTypes = {\r\n    entity: React.PropTypes.object.isRequired\r\n  }\r\n\r\n  download () {\r\n    const blob = b64toBlob(this.props.entity.contentRaw, 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet')\r\n    fileSaver.saveAs(blob, this.props.entity.name)\r\n  }\r\n\r\n  render () {\r\n    const { entity } = this.props\r\n\r\n    return (<div className='custom-editor'>\r\n      <div><h1><i className='fa fa-file-excel-o' /> {entity.name}</h1></div>\r\n      <div>\r\n        <button className='button confirmation' onClick={() => this.download()}>\r\n          <i className='fa fa-download' /> Download xlsx template\r\n        </button>\r\n        <button className='button confirmation' onClick={() => XlsxUploadButton.OpenUpload(false)}>\r\n          <i className='fa fa-upload' /> Upload (edit) xlsx template\r\n        </button>\r\n      </div>\r\n    </div>)\r\n  }\r\n}\r\n\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./studio/XlsxEditor.js\n **/","module.exports = Studio.libraries['react'];\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"Studio.libraries['react']\"\n ** module id = 2\n ** module chunks = 0\n **/","import React, { Component } from 'react'\r\nimport Studio from 'jsreport-studio'\r\n\r\nlet _xlsxTemplateUploadButton\r\n\r\nexport default class ImageUploadButton extends Component {\r\n  static propTypes = {\r\n    tab: React.PropTypes.object,\r\n    onUpdate: React.PropTypes.func.isRequired\r\n  }\r\n\r\n  // we need to have global action in main_dev which is triggered when users clicks on + on images\r\n  // this triggers invisible button in the toolbar\r\n  static OpenUpload (forNew = true) {\r\n    _xlsxTemplateUploadButton.openFileDialog(forNew)\r\n  }\r\n\r\n  componentDidMount () {\r\n    _xlsxTemplateUploadButton = this\r\n  }\r\n\r\n  upload (e) {\r\n    if (!e.target.files.length) {\r\n      return\r\n    }\r\n\r\n    const file = e.target.files[0]\r\n    const reader = new FileReader()\r\n\r\n    reader.onloadend = async () => {\r\n      this.refs.file.value = ''\r\n      if (this.forNew) {\r\n        if (Studio.workspaces) {\r\n          await Studio.workspaces.save()\r\n        }\r\n\r\n        let response = await Studio.api.post('/odata/xlsxTemplates', {\r\n          data: {\r\n            contentRaw: reader.result.substring(reader.result.indexOf('base64,') + 'base64,'.length),\r\n            name: file.name.replace(/.xlsx$/, '')\r\n          }\r\n        })\r\n        response.__entitySet = 'xlsxTemplates'\r\n\r\n        Studio.addExistingEntity(response)\r\n        Studio.openTab(Object.assign({}, response))\r\n      } else {\r\n        if (Studio.workspaces) {\r\n          Studio.updateEntity({\r\n            _id: this.props.tab.entity._id,\r\n            contentRaw: reader.result.substring(reader.result.indexOf('base64,') + 'base64,'.length)\r\n          })\r\n\r\n          await Studio.workspaces.save()\r\n        } else {\r\n          await Studio.api.patch(`/odata/xlsxTemplates(${this.props.tab.entity._id})`, {\r\n            data: {\r\n              contentRaw: reader.result.substring(reader.result.indexOf('base64,') + 'base64,'.length)\r\n            }\r\n          })\r\n          Studio.loadEntity(this.props.tab.entity._id, true)\r\n        }\r\n      }\r\n    }\r\n\r\n    reader.onerror = function () {\r\n      alert('There was an error reading the file!')\r\n    }\r\n\r\n    reader.readAsDataURL(file)\r\n  }\r\n\r\n  openFileDialog (forNew) {\r\n    this.forNew = forNew\r\n\r\n    this.refs.file.dispatchEvent(new MouseEvent('click', {\r\n      'view': window,\r\n      'bubbles': false,\r\n      'cancelable': true\r\n    }))\r\n  }\r\n\r\n  renderUpload () {\r\n    return <input\r\n      type='file' key='file' ref='file' style={{display: 'none'}} onChange={(e) => this.upload(e)}\r\n      accept='.xlsx'></input>\r\n  }\r\n\r\n  render () {\r\n    return this.renderUpload(true)\r\n  }\r\n}\r\n\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./studio/XlsxUploadButton.js\n **/","module.exports = Studio;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"Studio\"\n ** module id = 4\n ** module chunks = 0\n **/","module.exports = Studio.libraries['filesaver.js-npm'];\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"Studio.libraries['filesaver.js-npm']\"\n ** module id = 5\n ** module chunks = 0\n **/","import React, { Component } from 'react'\r\n\r\nexport default class Properties extends Component {\r\n  static selectItems (entities) {\r\n    return Object.keys(entities).filter((k) => entities[k].__entitySet === 'xlsxTemplates').map((k) => entities[k])\r\n  }\r\n\r\n  static title (entity, entities) {\r\n    if (!entity.xlsxTemplate || !entity.xlsxTemplate.shortid) {\r\n      return 'xlsx template'\r\n    }\r\n\r\n    const foundItems = Properties.selectItems(entities).filter((e) => entity.xlsxTemplate.shortid === e.shortid)\r\n\r\n    if (!foundItems.length) {\r\n      return 'xlsx template'\r\n    }\r\n\r\n    return 'xlsx template: ' + foundItems[0].name\r\n  }\r\n\r\n  render () {\r\n    const { entity, entities, onChange } = this.props\r\n    const xlsxTemplateItems = Properties.selectItems(entities)\r\n\r\n    return (\r\n      <div className='properties-section'>\r\n        <div className='form-group'>\r\n          <select\r\n            value={entity.xlsxTemplate ? entity.xlsxTemplate.shortid : ''}\r\n            onChange={(v) => onChange({_id: entity._id, xlsxTemplate: v.target.value !== 'empty' ? { shortid: v.target.value } : null})}>\r\n            <option key='empty' value='empty'>- not selected -</option>\r\n            {xlsxTemplateItems.map((e) => <option key={e.shortid} value={e.shortid}>{e.name}</option>)}\r\n          </select>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./studio/XlsxTemplateProperties.js\n **/"],"sourceRoot":""}